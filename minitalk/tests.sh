#!/bin/bash

# Compila os programas
make

# Fun√ß√µes de cor
green() {
    echo -e "\033[32m$1\033[0m"
}

red() {
    echo -e "\033[0;31m$1\033[0m"
}

blue() {
    echo -e "\033[0;34m$1\033[0m"
}

# Fun√ß√£o para gerar um emoji aleat√≥rio da tabela Unicode
gerar_emoji_aleatorio() {
    emojis=("üéâ" "üòä" "üöÄ" "üåà" "üçï" "üêß" "üî•" "üíª" "üëæ" "üåü" "üòÄ" "üòÇ" "‚ù§Ô∏è" "üòç" "ü§î" "üëç" "üëè" "üëå" "üôå" "üòä" "üéâ" "üåü" "üöÄ" "üíØ" "üôè" "üòé" "üëÄ" "üçï" "üçî" "üç¶" "üéà" "üéÅ" "üìö" "üéÆ" "üé§" "üé¨" "üèÜ" "üöó" "üö≤" "üåà" "üå∫" "üåç" "üçÄ" "üçÅ" "üçì" "üçá" "üçç" "üç©" "üçπ" "üèñÔ∏è" "üè†" "üè∞" "üõ´" "üõí" "‚è∞" "‚öΩ" "üé∏" "üé®" "üéØ" "üéÉ" )
    random_index=$((RANDOM % ${#emojis[@]}))
    echo "${emojis[$random_index]}"
}

# Inicia o servidor em background e obt√©m seu PID
./server > output.txt &
sleep 1

# Capturar o PID do servidor a partir da sa√≠da
server_pid=$(grep "Server PID:" output.txt | awk '{print $3}')
echo "server pid number is $server_pid"
echo ""
echo "-----------------------------"

# N√∫mero de testes aleat√≥rios
num_tests=10

# Tamanho m√°ximo da mensagem
max_msg_length=50

# Gera e envia mensagens aleat√≥rias
for ((i=1; i<=num_tests; i++))
do
    # Gera uma mensagem aleat√≥ria com tamanho vari√°vel, incluindo caracteres Unicode
    msg_length=$((1 + RANDOM % max_msg_length))
    random_msg=$(cat /dev/urandom | LC_CTYPE=C tr -dc '[:print:]' | tr -d '\000' | fold -w "$msg_length" | head -n 1)

    # verifica se h√° argumentos bonus e quantidade de emojis
    # exemplo: bonus 5
    if [[ $# -eq 2 && $1 == "bonus" ]]; then
    quantidade_emojis=$2
    emojis=""
    for ((emos=0; emos<quantidade_emojis; emos++)); do
        emojis+="$(gerar_emoji_aleatorio)"
    done
    else
        emojis=""  # Se a condi√ß√£o n√£o for verdadeira, n√£o adicionamos emojis
    fi
    # concatena a msg com os emojis
    random_msg=$random_msg$emojis
    # Limpa o arquivo de sa√≠da
    echo -n "" > output.txt

    # Exibe a mensagem aleat√≥ria gerada
    echo -e "$(blue "Teste $i: Enviando mensagem aleat√≥ria:")"
    echo "$random_msg"

    # Inicia o cliente com o PID do servidor e a mensagem aleat√≥ria
    ./client $server_pid "$random_msg"

    # Aguarda o cliente enviar a mensagem e o servidor escrever no arquivo
    sleep 1

    # Exibe o conte√∫do do arquivo de sa√≠da de forma leg√≠vel
    echo -e "$(blue "Conte√∫do do arquivo de sa√≠da:")"
    cat output.txt
    echo ""

    # Busca a mensagem no arquivo de sa√≠da
    output=$(grep -aF "$random_msg" output.txt 2>/dev/null)
    if [[ ! -z $output ]]; then
        echo -e "$(green "Teste passou: O servidor recebeu corretamente a mensagem.")"
    else
        echo -e "$(red "Teste falhou: O servidor n√£o recebeu a mensagem corretamente.")"
    fi

    echo "-----------------------------"
done

# Limpa
sleep 1
killall -9 server
rm server client output.txt
